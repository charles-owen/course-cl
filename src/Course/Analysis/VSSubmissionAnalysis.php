<?php
/**
 * @file
 * Class for analysis of Visual Studio submissions to ensure validity.
 */

namespace CL\Course\Analysis;

/**
 * Class for analysis of Visual Studio submissions to ensure validity.
 *
 * This looks to ensure there are no directories named .vs, zip, Debug, or Release
 * and no files with extension .db or .opendb.
 */
class VSSubmissionAnalysis extends Analysis {
	/// Tag for this analysis component
	const TAG = 'vssubmission';

	/**
	 * Perform a Visual Studio integrity analysis
	 * @param Analyzer $analyzer The analyzer for a submission
	 * @throws Exception If unable to unzip the solution or solution is invalid
	 */
	public function analyze(Analyzer $analyzer) {
		// Get the unzipped version of the project
		$dir = $analyzer->get_unzipped_dir();
		if ($dir === null) {
			throw new AnalysisException("Unable to unzip solution");
		}

		/*
		private string[] excludeDirs = { "zip", "Debug", "Release", "ipch", "html", ".git", ".vs" };
        private string[] excludeExts = { ".sdf", ".opensdf", ".zip", ".db", ".opendb" };
        private string[] excludeFiles = { ".gitattributes", ".gitignore" };
		*/

		$excludeDirs = array("[/\\](zip|Debug|Release|ipch|html|.git|.vs)$");

		// Will be set true if we find a solution file
		$has_sln = false;

		$dirIterator = new \RecursiveDirectoryIterator($dir);
		$iterator = new \RecursiveIteratorIterator($dirIterator,
			\RecursiveIteratorIterator::SELF_FIRST);
		foreach($iterator as $file) {
			if(preg_match("#\.sln$#", $file) === 1) {
				$has_sln = true;
			}

			if(!$this->testPath($file->getRealPath())) {
				throw new AnalysisException("Submission was not generated by Visual Studio and cannot be accepted.");
			}
		}

		if(!$has_sln) {
			throw new AnalysisException("Submission was not generated by Visual Studio and cannot be accepted.");
		}
	}

	/**
	 * Test for files that should not exist in a submission
	 * @param $file File
	 * @return bool True if file is okay
	 */
	public function testPath($file) {
		$exclude = "#(\.sdf|\.opensdf|\.zip|\.db|\.opendb|[\\\\/](\.vs|zip|Debug|Release|ipch|html))$#";
		return preg_match($exclude, $file) !== 1;
	}

	/**
	 * @brief Get information about the analysis component
	 * @return mixed Array with key 'name'
	 */
	public function info(\Course $course) {
		return null;
	}

	/**
	 * Present analysis for the user
	 * @param $analysis The analysis array as stored with the submission
	 * @return string HTML nothing for this analysis...
	 */
	public function present($analysis) {
		return "";
	}

}